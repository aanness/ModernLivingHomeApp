{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ashleyanness/Desktop/modern-living-app-main Final/ModernLivingSite/client/src/utils/ProtectedRoutes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // Protected Route - if a user is logged in session storage, then render the Component, else redirect to login\n\nconst ProtectedRoute = ({\n  isAuth,\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/ashleyanness/Desktop/modern-living-app-main Final/ModernLivingSite/client/src/utils/ProtectedRoutes.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAS,EAAEC,SAArB;AAAgC,KAAGC;AAAnC,CAAD,KAA+C;AACpE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAGJ,MAAH,EAAW;AACT,4BAAO,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAMT,c;AAeJ,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Protected Route - if a user is logged in session storage, then render the Component, else redirect to login\nconst ProtectedRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route \n      {...rest} \n      render={(props) => {\n        if(isAuth) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: {from: props.location } }} />\n        }\n      }} \n    />\n  );\n}\n\n  export default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}