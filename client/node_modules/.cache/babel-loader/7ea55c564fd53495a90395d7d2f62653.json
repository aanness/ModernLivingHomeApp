{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ashleyanness/Desktop/modern-living-app-main Final/ModernLivingSite/client/src/pages/projects/Projects.js\";\nimport React, { Component } from \"react\";\nimport ProjectItem from \"./ProjectItem\";\nimport NavBar from '../../components/NavigationBar';\nimport axios from \"axios\";\nimport \"./Project.css\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n    this.deleteProject = this.deleteProject.bind(this);\n    this.editProject = this.editProject.bind(this);\n  } // On page load (after render() ), get the projects from the db and set it to state\n\n\n  componentDidMount() {\n    axios.get(\"/api/projects\").then(res => {\n      this.setState({\n        projects: res.data\n      });\n    });\n  } // Handle deletion of a project in the db and update state to reflect deletion\n\n\n  deleteProject(id) {\n    axios.delete(`/api/projects/${id}`).then(() => {\n      this.setState({\n        projects: this.state.projects.filter(p => p._id !== id)\n      });\n    });\n  } // Handle update of a project in the db and update the state to reflect the change of a project\n\n\n  editProject(id, updatedProj) {\n    axios.put(`/api/projects/${id}`, updatedProj).then(() => {\n      const updatedProjects = this.state.projects.map(project => {\n        if (project._id === id) {\n          return { ...project,\n            ...updatedProj\n          };\n        }\n\n        return project;\n      });\n      this.setState({\n        projects: updatedProjects\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProjectsPage\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectsList\",\n        children: this.state.projects && this.state.projects.map(p => /*#__PURE__*/_jsxDEV(ProjectItem, {\n          id: p._id,\n          title: p.title,\n          category: p.category,\n          cost: p.estimated_cost,\n          budget: p.budget,\n          notes: p.notes,\n          delete: this.deleteProject,\n          update: this.editProject\n        }, p._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/ashleyanness/Desktop/modern-living-app-main Final/ModernLivingSite/client/src/pages/projects/Projects.js"],"names":["React","Component","ProjectItem","NavBar","axios","Projects","constructor","props","state","projects","deleteProject","bind","editProject","componentDidMount","get","then","res","setState","data","id","delete","filter","p","_id","updatedProj","put","updatedProjects","map","project","render","title","category","estimated_cost","budget","notes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAN4B,CAO7B;;;AACAE,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,KAAK,CAACU,GAAN,CAAU,eAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEO,GAAG,CAACE;AAAf,OAAd;AACH,KAHL;AAIH,GAb4B,CAc7B;;;AACAR,EAAAA,aAAa,CAACS,EAAD,EAAK;AACdf,IAAAA,KAAK,CAACgB,MAAN,CAAc,iBAAgBD,EAAG,EAAjC,EACKJ,IADL,CACU,MAAM;AACR,WAAKE,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUJ,EAA1C;AAAZ,OAAd;AACH,KAHL;AAIH,GApB4B,CAqB7B;;;AACAP,EAAAA,WAAW,CAACO,EAAD,EAAKK,WAAL,EAAkB;AACzBpB,IAAAA,KAAK,CAACqB,GAAN,CAAW,iBAAgBN,EAAG,EAA9B,EAAiCK,WAAjC,EACKT,IADL,CACU,MAAM;AACR,YAAMW,eAAe,GAAG,KAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,GAApB,CAAwBC,OAAO,IAAI;AACvD,YAAGA,OAAO,CAACL,GAAR,KAAgBJ,EAAnB,EAAsB;AAClB,iBAAO,EAAC,GAAGS,OAAJ;AAAa,eAAGJ;AAAhB,WAAP;AACH;;AACD,eAAOI,OAAP;AACH,OALuB,CAAxB;AAMA,WAAKX,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEiB;AAAZ,OAAd;AACH,KATL;AAUH;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACC,KAAKrB,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBkB,GAApB,CAAwBL,CAAC,iBAC7C,QAAC,WAAD;AAEI,UAAA,EAAE,EAAEA,CAAC,CAACC,GAFV;AAGI,UAAA,KAAK,EAAED,CAAC,CAACQ,KAHb;AAII,UAAA,QAAQ,EAAER,CAAC,CAACS,QAJhB;AAKI,UAAA,IAAI,EAAET,CAAC,CAACU,cALZ;AAMI,UAAA,MAAM,EAAEV,CAAC,CAACW,MANd;AAOI,UAAA,KAAK,EAAEX,CAAC,CAACY,KAPb;AAQI,UAAA,MAAM,EAAE,KAAKxB,aARjB;AASI,UAAA,MAAM,EAAE,KAAKE;AATjB,WACSU,CAAC,CAACC,GADX;AAAA;AAAA;AAAA;AAAA,gBADoB;AADxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAxD4B;;AA4DjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectItem from \"./ProjectItem\";\nimport NavBar from '../../components/NavigationBar';\nimport axios from \"axios\";\nimport \"./Project.css\";\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { projects: [] };\n        this.deleteProject = this.deleteProject.bind(this);\n        this.editProject = this.editProject.bind(this);\n    }\n    // On page load (after render() ), get the projects from the db and set it to state\n    componentDidMount() {\n        axios.get(\"/api/projects\")\n            .then(res => {\n                this.setState({projects: res.data});\n            })\n    }\n    // Handle deletion of a project in the db and update state to reflect deletion\n    deleteProject(id) {\n        axios.delete(`/api/projects/${id}`)\n            .then(() => {\n                this.setState({ projects: this.state.projects.filter(p => p._id !== id) });\n            })\n    }\n    // Handle update of a project in the db and update the state to reflect the change of a project\n    editProject(id, updatedProj) {\n        axios.put(`/api/projects/${id}`, updatedProj)\n            .then(() => {\n                const updatedProjects = this.state.projects.map(project => {\n                    if(project._id === id){\n                        return {...project, ...updatedProj}\n                    }\n                    return project;\n                });\n                this.setState({ projects: updatedProjects });\n            })\n    }\n    render() {\n        return (\n            <div className=\"ProjectsPage\">\n                <NavBar />\n                <div className=\"ProjectsList\">\n                {this.state.projects && this.state.projects.map(p => (\n                    <ProjectItem \n                        key={p._id}\n                        id={p._id}\n                        title={p.title}\n                        category={p.category}\n                        cost={p.estimated_cost}\n                        budget={p.budget}\n                        notes={p.notes}\n                        delete={this.deleteProject}\n                        update={this.editProject}\n                    />\n                ))}\n            </div>\n            </div>\n            \n        );\n    }\n}\n\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}